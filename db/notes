CREATE TABLE patient (
  patient_id INT PRIMARY KEY,
  name string(20),
  dob DATE,
  gender string(3),
  weight INT,
  phone_number string(20),
  email string(20),
  address string(40),
  allergies string[],
  notes string[]
);

create table doctor (
  doctor_id INT PRIMARY KEY,
  name string(20),
  password string(10)
);

CREATE TABLE patient_doctors (
  patient_id INT,
  doctor_id INT,
  FOREIGN KEY (patient_id) REFERENCES patient(patient_id),
  FOREIGN KEY (doctor_id) REFERENCES doctor(doctor_id),
  primary key (
  	patient_id,
  	doctor_id
  )
);

create table prescription (
  prescription_id INT PRIMARY KEY,
  patient_id int REFERENCES patient (patient_id),
  doctor_id int REFERENCES doctor (doctor_id),
  date date,
  note string(100),
  status bool
);

create table medication (
  medication_id int primary key,
  medication_brand_name string(20),
  medication_generic_name string(20),
  medication_cost int
);

CREATE TABLE prescription_items (
    prescription_id INTEGER REFERENCES prescription (prescription_id),
    medication_id   INTEGER REFERENCES medication (medication_id),
    quantity        INTEGER,
    PRIMARY KEY (
        prescription_id,
        medication_id
    )
);




fix date format

CREATE TABLE patient_doctors (
  patient_id INT,
  doctor_ids INT,
  FOREIGN KEY (patient_id) REFERENCES patient(patient_id),
  FOREIGN KEY (doctor_ids) REFERENCES doctor(doctor_id)
);

CREATE TABLE patient (patient_id INT PRIMARY KEY);

CREATE TABLE doctor (
  doctor_id INT PRIMARY KEY
);

insert into patient values (
15,
'Thejus Renjith',
'12-12-12',
'M',
56,
3434343434,
'thejus@renjith.com',
'Thejus House, Renjith', 
array['penicilin', 'supply'],
array['vomiting']
);

select p.prescription_id,r.name, p.date from prescription p join doctor d on p.doctor_id=d.doctor_id join patient r on r.patient_id=p.patient_id where d.doctor_id=154;

select a.medication_brand_name, a.medication_generic_name, pi.quantity, p.note, pa.name, p.date from prescription p join prescription_items pi on p.prescription_id=pi.prescription_id join medication a on pi.medication_id=a.medication_id join patient pa on p.patient_id=pa.patient_id where p.prescription_id=192;

SELECT 
    pi.medication_id,
    m.medication_generic_name,
    pi.quantity,
    pi.dosage,
    pi.days,
    p.date + pi.days AS due_date
FROM 
    prescription_items pi
    INNER JOIN medication m ON pi.medication_id = m.medication_id
    INNER JOIN prescription p ON pi.prescription_id = p.prescription_id
WHERE 
    p.patient_id = 1
    AND p.status = true
    AND p.date + pi.days >= NOW();
    
    
SELECT pi.medication_id,m.medication_generic_name,pi.quantity,pi.dosage,pi.days,p.date + pi.days AS due_date FROM  prescription_items pi INNER JOIN medication m ON pi.medication_id = m.medication_id INNER JOIN prescription p ON pi.prescription_id = p.prescription_id WHERE p.patient_id = 1 AND p.status = true AND p.date + pi.days >= NOW();

make two dates for prescription, issuing date of prescription and date when medicine is give. active prescriptions are calculated based on the second date. also set status of prescription as false when making it
hospital?

CREATE TABLE pharmacist (
    pharmacist_id INT PRIMARY KEY,
    email string(30),
    name string(20),
    password string(10),
    pharmacy_name string(100),
    license_number string(100),
    phone_number string(20),
    address string(100)
);

commands:
cockroach start \
--insecure \
--store=node1 \
--listen-addr=localhost:26257 \
--http-addr=localhost:8080 \
--join=localhost:26257,localhost:26258,localhost:26259 \
--background

cockroach init --insecure --host=localhost:26257

cockroach sql --insecure --host=localhost:26257 --database=truerx < medicine_db.sql

cockroach sql --insecure --host=localhost:26257 
